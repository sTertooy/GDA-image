FROM debian:stretch-slim as build

ENV GAP_BRANCH=stable-4.9
ENV GAP_HOME=/opt/gap

# Prerequisites
RUN apt-get update && \
    apt-get upgrade --yes && \
    apt-get install --yes --no-install-recommends \
        autoconf \
        ca-certificates \
        gcc \
        git \
        libgmp-dev \
        libreadline-dev \
        libtool \
        make \
        netbase \
        wget && \
    rm -rf /var/lib/apt/lists/*

# Download and build GAP
RUN git clone --depth 1 --branch ${GAP_BRANCH} https://github.com/gap-system/gap ${GAP_HOME} && \
    cd ${GAP_HOME} && \
    rm -rf \
        dev \
        extern \
        hpcgap

# Build GAP
RUN cd ${GAP_HOME} && \
    ./autogen.sh && \
    ./configure && \
    make

# Download GAP packages
RUN cd ${GAP_HOME} && \
    make bootstrap-pkg-full && \
    rm packages*.tar.gz && \
    cd ${GAP_HOME}/pkg && \
    rm -rf \
        4ti2Interface-* \
        ace-* \
        anupq-* \
        Browse \
        carat \
        cohomolo-* \
        crypting-* \
        curlInterface-* \
        cvec-* \
        datastructures-* \
        DeepThought-* \
        design \
        digraphs-* \
        EDIM-* \
        Example-* \
        ExamplesForHomalg-* \
        fining \
        float-* \
        FPLSA-* \
        fwtree-* \
        Gauss-* \
        GaussForHomalg-* \
        genss-* \
        GradedModules-* \
        GradedRingForHomalg-* \
        grape \
        guava-* \
        HAPcryst \
        help \
        itc-* \
        json-* \
        JupyterKernel-* \
        kbmag-* \
        linboxing \
        matgrp \
        NormalizInterface-* \
        nq-* \
        orb-* \
        PolymakeInterface \
        polymaking \
        qaos-* \
        rcwa-* \
        rds \
        recog-* \
        recogbase-* \
        RingsForHomalg-* \
        semigroups-* \
        simpcomp \
        singular \
        ToricVarieties \
        xgap-* \
        ZeroMQInterface-*

# Build GAP packages (should only be IO and profiling)
RUN cd ${GAP_HOME}/pkg && \
    ../bin/BuildPackages.sh

# Prepare for Github Actions use
RUN printf '#!/bin/sh\nLC_CTYPE=C.UTF-8 TERM="xterm" %s/bin/gap.sh "$@"\n' ${GAP_HOME} > /usr/local/bin/gap && \
    chmod +x /usr/local/bin/gap && \
    mkdir -p /tmp/gaproot/pkg

# Squash
FROM scratch
COPY --from=build / /

CMD ["bash"]
