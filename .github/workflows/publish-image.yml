name: Publish GAP Docker image

on:
  workflow_dispatch:
    inputs:
      BRANCH:
        required: true
        type: choice
        options:
          - "master"
          - "4.11"
          - "4.10"
          - "4.9"
          - "tex"
      TYPE:
        required: true
        type: choice
        options:
          - "full"
          - "slim"
  workflow_call:
    inputs:
      BRANCH:
        required: true
        type: string
      TYPE:
        required: true
        type: string

env:
  REGISTRY: ghcr.io

jobs:
  build:
    name: Publish GAP-${{ inputs.BRANCH }} Docker image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Compose Dockerfile
        shell: bash
        run: |
          # Choose correct dockerfile
          mv ${{ inputs.TYPE }}/Dockerfile Dockerfile
          
          # Add GAP_HOME to Dockerfile
          GAP_HOME=$(grep "GAP_HOME=" shared/DIRECTORIES.txt | cut -d'=' -f2)
          sed -i -e "s#{{GAP_HOME}}#$GAP_HOME#" Dockerfile
          
          # Add GAP_ROOT to Dockerfile
          GAP_ROOT=$(grep "GAP_ROOT=" shared/DIRECTORIES.txt | cut -d'=' -f2)
          sed -i -e "s#{{GAP_ROOT}}#$GAP_ROOT#" Dockerfile
          
          # Add BASE_IMAGE to Dockerfile
          BASE_IMAGE=$(grep "${{ inputs.BRANCH }}=" ${{ inputs.TYPE }}/BASE_IMAGE.txt | cut -d'=' -f2)
          sed -i -e "s#{{BASE_IMAGE}}#$BASE_IMAGE#" Dockerfile
          
          # Add GAP_BRANCH to Dockerfile
          GAP_BRANCH=$(grep "${{ inputs.BRANCH }}=" shared/GAP_BRANCH.txt | cut -d'=' -f2)
          sed -i -e "s#{{GAP_BRANCH}}#$GAP_BRANCH#" Dockerfile
          
          # Add GAP_PACKAGES to Dockerfile
          GAP_PACKAGES=$(tr "\n" " " < ${{ inputs.TYPE }}/GAP_PACKAGES.txt)
          sed -i -e "s#{{GAP_PACKAGES}}#$GAP_PACKAGES#" Dockerfile
          
          # Add GAP_PKGS_URL to Dockerfile
          GAP_PKGS_URL=$(grep "${{ inputs.BRANCH }}=" shared/GAP_PKGS_URL.txt | cut -d'=' -f2)
          sed -i -e "s#{{GAP_PKGS_URL}}#$GAP_PKGS_URL#" Dockerfile
          
          # Add TEMP_DEPS to Dockerfile
          TEMP_DEPS=$(grep "${{ inputs.BRANCH }}=" ${{ inputs.TYPE }}/TEMP_DEPS.txt | cut -d'=' -f2)
          sed -i -e "s#{{TEMP_DEPS}}#$TEMP_DEPS#" Dockerfile
          
          # Add PERM_DEPS to Dockerfile
          PERM_DEPS=$(grep "${{ inputs.BRANCH }}=" ${{ inputs.TYPE }}/PERM_DEPS.txt | cut -d'=' -f2)
          sed -i -e "s#{{PERM_DEPS}}#$PERM_DEPS#" Dockerfile
          
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ github.repository }}
            ${{ env.REGISTRY }}/${{ github.repository }}
          tags: |
            type=raw,value=${{ inputs.BRANCH }}${{ inputs.TYPE == 'slim' && '-slim' || '' }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
